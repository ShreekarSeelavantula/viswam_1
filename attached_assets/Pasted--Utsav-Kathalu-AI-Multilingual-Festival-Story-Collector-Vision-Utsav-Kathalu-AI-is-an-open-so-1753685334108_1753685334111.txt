ðŸŒ¸ Utsav Kathalu AI â€” Multilingual Festival Story Collector
ðŸª” Vision
Utsav Kathalu AI is an open-source, AI-powered Streamlit application that collects and curates culturally rich festival stories from people across India. The app supports multilingual voice and text uploads, uses AI to clean and correct natural language inputs, and finally presents stories as interactive virtual books â€” beautifully animated, with page-turn effects and visuals.

This platform also helps build a clean Indic language corpus, enabling future research and fine-tuning of AI/ML models related to regional language understanding, culture preservation, and storytelling.

ðŸ’¡ Project Goals
Collect festival-related stories in multiple Indian languages

Allow upload of stories via voice (converted using Whisper or similar) or text

Automatically clean and correct grammar using AI/NLP models

Organize the story into sections/pages, each with related images

Display final stories in a virtual book with animations for page turning

Provide an engaging and professional UI/UX experience for storytelling

Store and manage user accounts, sessions, and personal story uploads

âœ… Progress So Far
âœ… Project cloned into local or Replit environment

âœ… Initial README.md config fixed for Hugging Face compatibility

âœ… Streamlit setup completed

âœ… Folder structure designed for modularity

âœ… Shared clear idea and flow for:

Homepage UI

Signup/Login pages

Upload methods

AI integration for correcting data

Virtual book viewer with animation

âœ… Planned deployment targets: Replit + Hugging Face Spaces

ðŸ“„ User Flow & Page Responsibilities
Page	Description
Home	Beautifully designed landing page with an Explore button
Auth	User signup/login page with required fields (name, email, password, language, etc.)
Dashboard	After login, shows welcome message and options to upload stories
Upload	User chooses between text or voice input and specifies number of sections; uploads related images per section
AI Cleaner	Processes text input and auto-corrects grammar/phrasing using AI
Virtual Book	Displays the final cleaned story in a page-by-page viewer with animations, embedded images, and next/prev navigation

ðŸ§¾ Folder Structure (Current and Planned)
bash
Copy
Edit
utsav-kathalu-ai/
â”‚
â”œâ”€â”€ app.py                  # Streamlit entry point
â”œâ”€â”€ requirements.txt        # Dependencies
â”œâ”€â”€ README.md               # This file (Replit prompt)
â”œâ”€â”€ .replit                 # Streamlit run config
â”‚
â”œâ”€â”€ utils/
â”‚   â”œâ”€â”€ auth.py             # Signup/login/session logic
â”‚   â”œâ”€â”€ speech_to_text.py   # Whisper or voice-to-text
â”‚   â”œâ”€â”€ text_cleaner.py     # AI correction module
â”‚   â””â”€â”€ db.py               # Data storage/logic
â”‚
â”œâ”€â”€ pages/
â”‚   â”œâ”€â”€ 1_Home.py
â”‚   â”œâ”€â”€ 2_Auth.py
â”‚   â”œâ”€â”€ 3_Upload.py
â”‚   â”œâ”€â”€ 4_VirtualBook.py
â”‚
â”œâ”€â”€ assets/
â”‚   â”œâ”€â”€ images/
â”‚   â”œâ”€â”€ css/
â”‚   â””â”€â”€ js/
â”‚
â”œâ”€â”€ data/
â”‚   â”œâ”€â”€ users.json
â”‚   â””â”€â”€ stories/
ðŸ§  Technologies Used
Frontend: Streamlit for fast interactive UI

AI Models:

Whisper for speech-to-text

OpenAI or similar NLP model for sentence correction

Deployment: Replit + Hugging Face Spaces

Storage: JSON/local file-based for MVP (can upgrade to Firebase or DB later)

